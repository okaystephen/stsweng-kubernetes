# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
    branches: [ main, sprint1, sprint2, sprint3 ]
  push:
    branches: [ Sandbox ]

jobs:
  test_pull_request: 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [10.x, 12.x, 14.x]
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:         
          node-version: ${{ matrix.node-version }}
      - run: npm ci 
      - run: npm test

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Execute tests
    uses: joovena/robotframework-docker-action@v0.1
    env:
      BROWSER: chrome
      ROBOT_TESTS_DIR: ${{ github.workspace }}/tests
      ROBOT_REPORTS_DIR: ${{ github.workspace }}/reports
    - name: Upload test results
    uses: actions/upload-artifact@v1
    if: always()
    with:
      name: reports
      path: ${{ github.workspace }}/reports

    generate_report:
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Download reports
      uses: actions/download-artifact@v1
      with:
        name: reports
      - name: Get Repository Owner & Name
      run: |
        export OWNER="$(echo "${{ github.repository }}" | awk -F / '{print $1}' | sed -e "s/:refs//")"
            export REPO="$(echo "${{ github.repository }}" | awk -F / '{print $2}' | sed -e "s/:refs//")"
            echo "::set-env name=REPOSITORY_OWNER::$OWNER"
            echo "::set-env name=REPOSITORY_NAME::$REPO"
      - name: Send report to commit
        uses: joonvena/robotframework-reporter-action@v0.1
        env:
          GH_ACCESS_TOKEN: ${{ secrets.TOKEN }}
          REPO_OWNER: ${{ env.REPOSITORY_OWNER }}
          COMMIT_SHA: ${{ github.sha }}
          REPOSITORY: ${{ env.REPOSITORY_NAME }}
          REPORT_PATH: reports